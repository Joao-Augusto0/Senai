package visao;
import java.awt.Color; 
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;

import controle.PetPreocess;
import modelo.Pet;

public class Petform extends JFrame implements ActionListener{

	private static final long serialVersionUID = 1L;
	private JPanel painel;
	private JLabel id1, especie1,raça1,nome1,peso1,nascimento1,dono1,telefone1,texto1, rotulos,imagem;
	private JTextField Id, Raça,Nome,Peso,Nascimento,Dono,Telefone;
	private JTextArea texto;
	JComboBox<String> Especie;
	private JButton Cadastrar,Buscar,Alterar,Excluir;
	private String texto2 = "";
	private JTextArea verResultados;

	private String imgIco = "C:\\Users\\jaugu\\Desktop\\senai\\1semestre\\fpoo\\aulas\\exjava0305\\pets\\src\\img\\panda.jpg";
	private String[] imagens = { "C:\\Users\\jaugu\\Desktop\\senai\\1semestre\\fpoo\\aulas\\exjava0305\\pets\\src\\img\\cachorro.jpg",
			"C:\\Users\\jaugu\\Desktop\\senai\\1semestre\\fpoo\\aulas\\exjava0305\\pets\\src\\img\\gato.jpg",
			"C:\\Users\\jaugu\\Desktop\\senai\\1semestre\\fpoo\\aulas\\exjava0305\\pets\\src\\img\\coelho.jpg",
			"C:\\Users\\jaugu\\Desktop\\senai\\1semestre\\fpoo\\aulas\\exjava0305\\pets\\src\\img\\panda.jpg" };
	private ImageIcon icon;
	private JLabel img;
	private int autoId = PetPreocess.pets.size() + 1;

	
	Petform(){
		setTitle("Formulario de Pets");
		setBounds(200, 300, 600, 500);
		setIconImage(new ImageIcon(imgIco).getImage());
		
		painel = new JPanel();
		painel.setBackground(new Color (255,233,213));
		setContentPane(painel);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setLayout(null);
		
		id1 = new JLabel("id");
		id1.setBounds(20,20,120,30);
		Id = new JTextField(String.format("%d", autoId));
		Id.setEditable(false);
		Id.setBounds(140,20,260,30);
		
		especie1 = new JLabel("Especie");
		especie1.setBounds(20,50,120,30);
		Especie = new JComboBox<String>(new String[] {"Cachorro", "Gato", "Coelho", "Outro" });
		Especie.setBounds(140,50,260,30);
		
		raça1 = new JLabel("Raça");
		raça1.setBounds(20,80,120,30);
		Raça = new JTextField();
		Raça.setBounds(140,80,260,30);
		
		nome1 = new JLabel("Nome");
		nome1.setBounds(20,110,120,30);
		Nome = new JTextField();
		Nome.setBounds(140,110,260,30);
		
		peso1 = new JLabel("Peso");
		peso1.setBounds(20,140,120,30);
		Peso = new JTextField();
		Peso.setBounds(140,140,260,30);
		
		nascimento1 = new JLabel("Nascimento");
		nascimento1.setBounds(20,170,120,30);
		Nascimento = new JTextField();
		Nascimento.setBounds(140,170,260,30);
		
		dono1 = new JLabel("Dono");
		dono1.setBounds(20,200,120,230);
		Dono = new JTextField();
		Dono.setBounds(140,200,260,30);
		
		telefone1 = new JLabel("Telefone");
		telefone1.setBounds(20,230,120,30);
		Telefone = new JTextField();
		Telefone.setBounds(140,230,260,30);
		verResultados = new JTextArea();
		
		rotulos = new JLabel("Id:     Esp�cie:       Pet:        Peso:       Idade:       Dono:        Telefone:");
		rotulos.setBounds(20, 350, 400, 30);
		
		//
		
		verResultados.setBounds(20,290,545,150);
		verResultados.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.black));
		preencher();
		
		imagem = new JLabel();
		imagem.setBounds(410,145,150,115);
		imagem.setBorder(BorderFactory.createMatteBorder(1,1,1,1, Color.black));
		altenarImagens(0);
		
		texto1 = new JLabel();
		texto1.setBounds(20,400,100,20);
		texto  = new JTextArea();
		texto .setEnabled(false);
		texto .setBounds(120,380,400,110);
		texto .setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.BLACK));
		
		
		Cadastrar = new JButton("cadastrar");
		Cadastrar.setBounds(410,20,150,30);
		
		Buscar = new JButton("buscar");
		Buscar.setBounds(410,50,150,30);
		
		Alterar = new JButton("alterar");
		Alterar.setBounds(410,80,150,30);
		
		Excluir = new JButton("excluir");
		Excluir.setBounds(410,110,150,30);
		
		
		painel.add(id1);
		painel.add(Id);
		painel.add(especie1);
		painel.add(Especie);
		painel.add(raça1);
		painel.add(Raça);
		painel.add(nome1);
		painel.add(Nome);
		painel.add(peso1);
		painel.add(Peso);
		painel.add(nascimento1);
		painel.add(Nascimento);
		painel.add(dono1);
		painel.add(Dono);
		painel.add(telefone1);
		painel.add(Telefone);
		painel.add(texto1);
		painel.add(texto);
		painel.add(Cadastrar);
		painel.add(Buscar);
		painel.add(Alterar);
		painel.add(Excluir);
		painel.add(img);	
		painel.add(rotulos);
		painel.add(verResultados);
		painel.add(imagem);
		
		Especie.addActionListener(this);
		Cadastrar.addActionListener(this);
		Buscar.addActionListener(this);
		Alterar.addActionListener(this);
		Excluir.addActionListener(this);
	}
	
	private void altenarImagens(int indice) {
		icon = new ImageIcon(new ImageIcon(imagens[indice]).getImage().getScaledInstance(150,115,100));
		imagem.setIcon(icon);
	}
	

	private void preencher() {
		texto2 = "";
		for (Pet p: PetPreocess.pets) {
			texto2 += p.toString();
		}
		verResultados.setText(texto2);
	}
	
	private void cadastrar() throws NumberFormatException, ParseException {
		if(raça1.getText().length() != 0 && nome1.getText().length() != 0 && peso1.getText().length() != 0 && nascimento1.getText().length() != 0  && dono1.getText().length() != 0 && telefone1.getText().length() != 0) {
			PetPreocess.pets.add(new Pet(autoId,Especie.getSelectedItem().toString(),Raça.getText(),Nome.getText(),Float.parseFloat(Peso.getText()),Nascimento.getText(),Dono.getText(),Telefone.getText()));
			autoId++;
			limparCampos();
			
		}else {
			JOptionPane.showMessageDialog(this,"favor preencher todos os campos");
		}
	}
	
	private void limparCampos() {
		Nome.setText(null);
		Raça.setText(null);
		Peso.setText(null);
		Nascimento.setText(null);
		Dono.setText(null);
		Telefone.setText(null);
	}

	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == Especie) {
			altenarImagens(Especie.getSelectedIndex());
		}
		
		if(e.getSource() == Cadastrar) {
			try {
				cadastrar();
			} catch (NumberFormatException | ParseException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			
		}
		
		if(e.getSource() == Buscar) {
			
		}
		
		if(e.getSource() == Alterar) {
	
		}
		
		if(e.getSource() == Excluir) {
	
		}
	}	
	
	public static void main(String[] args) throws ParseException {
		PetPreocess.carregarTestes();
		new Petform().setVisible(true);
	}
}